use types::hdl;
use types::int;

struct IOHandle opaque(Handle);

/// Places the thread in `BLOCKED` state if any operation on the handle (including the `OpenFile` operation) cannot complete immediately.
///
/// Blocking operations that do not complete immediately act like any other blocking syscall from the thread api
const MODE_BLOCKING: u32 = 0x00;

/// Returns immediately with WOULDBLOCK if any operation on the handle (including the `OpenFile` operation) cannot complete immediately
const MODE_NONBLOCKING: u32 = 0x01;

/// Returns immediately with PENDING if any operation on the handle (including the `OpenFile` operation) cannot complete immediaetly.
///
/// The operation is queued and performed in the background.
const MODE_ASYNC: u32 = 0x02;

const NOTIFY_INTERRUPT: u32 = 0x40;
const NOTIFY_SIGNAL_MASK: u32 = 0x3f;

const CHAR_READABLE: u32 = 0x01;
const CHAR_WRITABLE: u32 = 0x02;
const CHAR_SEEKABLE: u32 = 0x04;
const CHAR_RANDOMACCESS: u32 = 0x08;

const SEEK_FROM_START: u32 = 0;
const SEEK_FROM_END: u32 = 1;
const SEEK_FROM_CURRENT: u32 = 2;
